{"version":3,"sources":["Containers/DayCard.js","Containers/DegreeToggle.js","Containers/WeekContainer.js","Containers/HeaderContainer.js","Containers/LocationForm.js","Containers/WeatherForcastContainer.js","App.js","reportWebVitals.js","index.js","apiKeys.js"],"names":["moment","require","DayCard","reading","degreeType","newDate","Date","weekday","dt","setTime","fahrenheit","Math","round","main","temp","celsius","imgURL","weather","id","className","format","description","DegreeToggle","updateForecastDegree","Fragment","class","type","name","value","checked","onChange","for","WeekContainer","props","event","setState","target","console","log","state","formatDayCards","dailyData","map","index","this","React","Component","HeaderContainer","location","LocationForm","handleSubmit","bind","handleChange","updateZip","preventDefault","onSubmit","WeatherForcastContainer","componentDidMount","navigator","geolocation","getCurrentPosition","pos","cords","coords","fetchLocationFromCordinates","latitude","longitude","err","zip","fetchWeather","weatherURL","apiConfig","weatherApiKey","fetch","then","res","json","data","list","filter","dt_txt","includes","fullData","catch","error","fetchLocation","locationURL","stateAbv","lat","lon","geoLocationURL","geolocationApiKey","findAbvFromState","newZip","states","item","abbreviation","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","exports"],"mappings":"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","file":"static/js/main.fb6279ed.chunk.js","sourcesContent":["import React from 'react';\r\nvar moment = require('moment');\r\n\r\nconst DayCard = ({ reading, degreeType }) => {\r\n    let newDate = new Date();\r\n    const weekday = reading.dt * 1000\r\n    newDate.setTime(weekday)\r\n  \r\n    const fahrenheit = Math.round(reading.main.temp)\r\n    const celsius = Math.round((fahrenheit - 32) * 5/9)\r\n\r\n    const imgURL = `owf owf-${reading.weather[0].id} owf-5x`\r\n  \r\n    return (\r\n      <div className=\"flex-sm-fill\">\r\n        <div className=\"card\">\r\n          <h3 className=\"card-title\">{moment(newDate).format('dddd')}</h3>\r\n          <p className=\"text-muted\">{moment(newDate).format('MMMM Do, h:mm a')}</p>\r\n          <i className={imgURL}></i>\r\n          <h2>{degreeType === \"celsius\" ? celsius + \"°C\" : fahrenheit + \"°F\"}</h2>\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text\">{reading.weather[0].description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default DayCard","import React from 'react';\r\n\r\nconst DegreeToggle = ({degreeType, updateForecastDegree}) => {\r\n  return (\r\n    <React.Fragment>\r\n    <div className=\"form-check form-check-inline\">\r\n        <input\r\n        class=\"form-check-input\"\r\n        type=\"radio\"\r\n        name=\"degree-type\"\r\n        id=\"celsius\"\r\n        value=\"celsius\"\r\n        checked={degreeType === \"celsius\"}\r\n        onChange={updateForecastDegree}\r\n        />\r\n        <label class=\"form-check-label\" for=\"celsius\">Celsius</label>\r\n      </div>\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n        class=\"form-check-input\"\r\n        type=\"radio\"\r\n        name=\"degree-type\"\r\n        id=\"farenheit\"\r\n        value=\"fahrenheit\"\r\n        checked={degreeType === \"fahrenheit\"}\r\n        onChange={updateForecastDegree}\r\n        />\r\n        <label class=\"form-check-label\" for=\"farenheit\">Farenheit</label>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default DegreeToggle;","import React from 'react';\r\nimport DayCard from './DayCard';\r\nimport DegreeToggle from './DegreeToggle';\r\n\r\nclass WeekContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      degreeType: \"fahrenheit\",\r\n    }\r\n  }\r\n\r\n  updateForecastDegree = event => {\r\n    this.setState({\r\n      degreeType: event.target.value\r\n    }, () => console.log(this.state))\r\n  }\r\n\r\n  formatDayCards = () => {\r\n    return this.props.dailyData.map((reading, index) => <DayCard reading={reading} degreeType={this.state.degreeType} key={index} />)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row flex-fill\">\r\n          {this.formatDayCards()}\r\n        </div>\r\n        <DegreeToggle degreeType={this.state.degreeType} updateForecastDegree={this.updateForecastDegree} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WeekContainer;","import React from 'react'\r\n\r\nconst HeaderContainer = ({location}) => {\r\n    return (\r\n      <div>\r\n      <h1 className=\"display-1 jumbotron\">5-Day Forecast.</h1>\r\n      <h5 className=\"display-5 text-muted\">{location}</h5>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default HeaderContainer;","import React from 'react';\r\n\r\nclass LocationForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            value: null\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value})\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.updateZip(this.state.value)\r\n        event.preventDefault()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Search by ZIP code:\r\n              <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LocationForm;\r\n","import React from 'react';\r\nimport WeekContainer from './WeekContainer';\r\nimport HeaderContainer from './HeaderContainer';\r\nimport LocationForm from './LocationForm';\r\nimport apiConfig from '../apiKeys';\r\nimport states from '../states.json';\r\n\r\nclass WeatherForcastContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            zip: null,\r\n            location: null,\r\n            fullData: [],\r\n            dailyData: []\r\n\r\n        }\r\n\r\n        this.updateZip = this.updateZip.bind(this)\r\n        this.fetchLocationFromCordinates = this.fetchLocationFromCordinates.bind(this)\r\n    }\r\n\r\n    updateZip(newZip) {\r\n        if (newZip !== this.state.zip) {\r\n            this.setState({ zip: newZip }, () => {\r\n                this.fetchWeather()\r\n                this.fetchLocation()\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                (pos) => {\r\n                    const cords = pos.coords\r\n                    this.fetchLocationFromCordinates(cords.latitude, cords.longitude)\r\n                },\r\n                (err) => {\r\n                    console.log(\"Error getting geolocation\")\r\n                })\r\n        } else if (this.state.zip) {\r\n            this.fetchWeather()\r\n        }     \r\n    }\r\n\r\n    fetchWeather = () => {\r\n        const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?zip=${this.state.zip},us&units=imperial&appid=${apiConfig.weatherApiKey}`\r\n\r\n        fetch(weatherURL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"))\r\n                this.setState({\r\n                    fullData: data.list,\r\n                    dailyData: dailyData,\r\n                }, () => console.log(this.state))\r\n            }).catch((error) => {\r\n                console.log(\"Error reading weather API\")\r\n            })\r\n    }\r\n\r\n    fetchLocation = () => {\r\n        const locationURL = `http://api.zippopotam.us/us/${this.state.zip}`\r\n\r\n        fetch(locationURL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const location = data['places'][0]['place name']\r\n                const stateAbv = data['places'][0]['state abbreviation']\r\n                this.setState({\r\n                    location: `${location}, ${stateAbv}`\r\n                }, () => console.log(this.state))\r\n            }).catch((error) => {\r\n                console.log(\"Error reading zip location API\")\r\n            })\r\n    }\r\n\r\n    fetchLocationFromCordinates = (lat, lon) => {\r\n        const geoLocationURL = `https://us1.locationiq.com/v1/reverse.php?key=${apiConfig.geolocationApiKey}&lat=${lat}&lon=${lon}&format=json`\r\n\r\n        fetch(geoLocationURL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const zip = data['address']['postcode']\r\n                const location = data['address']['city']\r\n                const stateAbv = this.findAbvFromState(data['address']['state'])\r\n                console.log(\"abv: \" + stateAbv)\r\n                this.setState({\r\n                    zip: zip,\r\n                    location: (stateAbv) ? `${location}, ${stateAbv}` : location\r\n                }, () => this.fetchWeather())\r\n            }).catch((error) => {\r\n                console.log(\"Error reading geolocation API\")\r\n            })\r\n    }\r\n\r\n    findAbvFromState(state) {\r\n        for(let item of states) {\r\n            if (item.name === state) {\r\n                return item.abbreviation\r\n            }\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <LocationForm updateZip={this.updateZip} />\r\n                {this.state.zip && <HeaderContainer location={this.state.location} /> }\r\n                {this.state.zip && <WeekContainer dailyData={this.state.dailyData} /> }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherForcastContainer;","import React, { Component } from 'react';\nimport './App.css';\nimport WeatherForcastContainer from './Containers/WeatherForcastContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <WeatherForcastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var weatherApiKey = '758f485258961db017a0ea538fb37439'\r\nvar geolocationApiKey = 'pk.22641b5ae8685aa358903f1d02f32daf'\r\n\r\nexports.weatherApiKey = weatherApiKey\r\nexports.geolocationApiKey = geolocationApiKey"],"sourceRoot":""}